"use strict";
const attributesToRemovePatterns = ['__ngContext__'];
const print = (fixture, print, indent, opts, colors) => {
    let componentAttrs = '';
    const { componentRef, componentInstance } = fixture;
    const componentDef = componentRef.componentType.Éµcmp;
    const componentName = componentDef.selectors[0][0];
    const nodes = Array.from(componentRef.location.nativeElement.childNodes).map(print).join('');
    const attributes = Object.keys(componentInstance).filter((key) => !attributesToRemovePatterns.includes(key));
    if (attributes.length) {
        componentAttrs += attributes
            .sort()
            .map((attribute) => {
            const compAttrVal = componentInstance[attribute];
            return (opts.spacing +
                indent(`${colors.prop.open}${attribute}${colors.prop.close}=`) +
                colors.value.open +
                (compAttrVal && compAttrVal.constructor
                    ? `{[Function ${compAttrVal.constructor.name}]}`
                    : `"${compAttrVal}"`) +
                colors.value.close);
        })
            .join('');
    }
    return ('<' +
        componentName +
        componentAttrs +
        (componentAttrs.length ? '\n' : '') +
        '>\n' +
        indent(nodes) +
        '\n</' +
        componentName +
        '>').replace(/\n^\s*\n/gm, '\n');
};
const test = (val) => !!val && typeof val === 'object' && Object.prototype.hasOwnProperty.call(val, 'componentRef');
module.exports = {
    print,
    test,
};
